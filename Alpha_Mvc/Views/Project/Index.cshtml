@model ProjectsViewModel
@{
    ViewData["Css"] = "~/css/home.css";
    ViewData["Css2"] = "~/css/projectForms.css";
    Layout = "_Layout";

    var total = Model.Cards.Count();
    var started = Model.Cards.Count(x => x.StatusName == "Started");
    var completed = Model.Cards.Count(x => x.StatusName == "Completed");
    var pending = Model.Cards.Count(x => x.StatusName == "Pending");
}

@await Html.PartialAsync("Sections/_AddProjectSection", Model.CreateProjectForm)


<div class="top">
    <h2>Projects</h2>
    <button type="button" data-modal="true" data-target="#addProjectModal" class="btn">
        <i class="fa-solid fa-plus"></i>
        <span>Add Project</span>
    </button>
</div>

<div id="filter-bar" class="filter-bar">
    <button id="All" class="alternative active">ALL [@total]</button>
    <button id="Started"class="alternative">STARTED [@started]</button>
    <button id="Completed" class="alternative">COMPLETED [@completed]</button>
    <button id="Pending" class="alternative">PENDING [@pending]</button>
    <hr />
</div>
<div class="content">
    @if (Model.Cards.Any())
    {
        foreach (var card in Model.Cards)
        {
            @await Html.PartialAsync("Partials/_ProjectCard", card)
        }
    }
    else
    {
        <p>No projects was found.</p>
    }
</div>




@section Scripts {
    <script src="~/js/sorting.js" asp-append-version="true"></script>
}

<script>
    document.addEventListener('DOMContentLoaded', () => {
        
        sortProjects();

    });
</script>

