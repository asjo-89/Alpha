@model TeamMembersViewModel


<div class="modal" id="addMemberModal">
    <div class="modal-container">
        <div class="top">
            <h3>Add Member</h3>
            <button type="button" class="exit" data-close="true">
                <i class="fa-solid fa-xmark"></i>
            </button>
        </div>

        <form class="form" action="/Admin/AddMember" method="post" enctype="multipart/form-data" novalidate>
            <div class="image-preview-container">
                <div id="add-circle" class="border-circle show">
                    <div class="camera" id="add-camera">
                        <i class="fa-solid fa-camera"></i>
                    </div>
                </div>

                <img id="add-image-preview" class="image-preview" />
            </div>

            <div class="form-inputs-container">
                <div class="form-group">
                    <label asp-for="Member.ProfileImage" hidden></label>
                    <input id="add-image-input" asp-for="Member.ProfileImage" class="image-input" accept="image/*" hidden />
                    <span asp-validation-for="Member.ProfileImage"></span>
                </div>

                <div class="form-group">
                    <div class="input-container">
                        <label class="label" asp-for="Member.FirstName"></label>
                        <input type="text" class="input" asp-for="Member.FirstName">
                        <span asp-validation-for="Member.FirstName"></span>
                    </div>
                    <div class="input-container">
                        <label class="label" asp-for="Member.LastName"></label>
                        <input type="text" class="input" asp-for="Member.LastName">
                        <span asp-validation-for="Member.LastName"></span>
                    </div>
                </div>

                <div class="input-container">
                    <label class="label" asp-for="Member.Email"></label>
                    <input type="email" class="input" asp-for="Member.Email">
                    <span asp-validation-for="Member.Email"></span>
                </div>

                <div class="input-container">
                    <label class="label" asp-for="Member.PhoneNumber"></label>
                    <input type="text" class="input" asp-for="Member.PhoneNumber">
                    <span asp-validation-for="Member.PhoneNumber"></span>
                </div>

                <div class="form-group">
                    <div class="input-container">
                        <label class="label" asp-for="Member.JobTitle"></label>
                        <input type="text" class="input" asp-for="Member.JobTitle">
                        <span asp-validation-for="Member.JobTitle"></span>
                    </div>

                    <div class="input-container">
                        <label class="label" asp-for="Member.RoleId">Role</label>
                        <select id="role" class="input" asp-for="Member.RoleId" asp-items="Model.Roles">
                            <option value="">Select a role...</option>
                        </select>
                        <span asp-validation-for="Member.RoleId"></span>
                    </div>
                </div>
                

                <div class="input-container">
                    <label class="label" asp-for="Member.StreetAddress"></label>
                    <input type="text" class="input street" asp-for="Member.StreetAddress">
                    <span asp-validation-for="Member.StreetAddress"></span>
                </div>

                <div class="form-group">
                    <div class="input-container">
                        <label class="label" asp-for="Member.PostalCode"></label>
                        <input class="input postal-code" asp-for="Member.PostalCode">
                        <span asp-validation-for="Member.PostalCode" class="postal-span"></span>
                    </div>
                    <div class="input-container">
                        <label class="label" asp-for="Member.City"></label>
                        <input type="text" class="input city" asp-for="Member.City">
                        <span asp-validation-for="Member.City" class="city-span"></span>
                    </div>

                </div>
                <div class="form-group">
                    <div class="day">
                        <label class="label day-label" asp-for="Member.BirthDay">Day</label>
                        <select id="day" class="input day" asp-for="Member.BirthDay">
                            <option value="">-- Select Day --</option>
                            @for (int i = 1; i <= 31; i++)
                            {
                                <option value="@i">@i</option>
                            }
                        </select>
                        <span asp-validation-for="Member.BirthDay"></span>
                    </div>
                    <div class="month">
                        <label class="label birth-label" asp-for="Member.BirthMonth">Month</label>
                        <select id="month" class="input month" asp-for="Member.BirthMonth">
                            <option value="">-- Select Month --</option>
                            @for (int i = 1; i <= 12; i++)
                            {
                                <option value="@i">@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(@i)</option>
                            }
                        </select>
                        <span asp-validation-for="Member.BirthMonth"></span>
                    </div>
                    <div class="year">
                        <label class="label birth-label" asp-for="Member.BirthYear">Year</label>
                        <select id="year" class="input year" asp-for="Member.BirthYear">
                            <option value="">-- Select Year --</option>
                            @for (int i = DateTime.Now.Year; i >= 1900; i--)
                            {
                                <option value="@i">@i</option>
                            }
                        </select>
                        <span asp-validation-for="Member.BirthYear"></span>
                    </div>
                </div>
            </div>
            <button type="submit" class="btn">
                Add Member
            </button>
        </form>
    </div>
</div>


<script>

    var errorMessages = @Html.Raw(Json.Serialize(ViewData.ModelState))



    document.addEventListener("DOMContentLoaded", () => {
         const openModalButton = document.querySelector('[data-target="#addMemberModal"]');
    if (openModalButton) {
        openModalButton.addEventListener('click', () => {
            const modal = document.querySelector('#addMemberModal');
            if (modal && typeof initFormValidation === 'function') {
                initFormValidation(modal); 
            }
        });
    }

        const camera = document.querySelector("#add-camera");
        const imageInput = document.querySelector("#add-image-input");

        if (!imageInput) return;

        camera.addEventListener("click", () => {
            imageInput.click();
        });

        imageInput.addEventListener("change", (e) => {
            const image = e.target.files[0];
            const circle = document.querySelector("#add-circle");
            const imagePreview = document.querySelector("#add-image-preview");

            if (image) {
                const reader = new FileReader();

                reader.onload = (e) => {
                    imagePreview.src = e.target.result;
                    circle.classList.remove('show');
                    imagePreview.classList.add('show');
                };

                reader.readAsDataURL(image);
            } else {
                circle.classList.add('show');
                imagePreview.classList.remove('show');
            }
        });

        document.addEventListener('click', (e) => {
            const modals = document.querySelectorAll('.modal');

            modals.forEach(modal => {
                const exitButton = modal.querySelector('[data-close="true"]');

                if (exitButton.contains(e.target)) {
                    modal.classList.remove('show');

                    modal.querySelectorAll('form').forEach(form => {
                        form.reset();

                        const imagePreview = form.querySelector('#add-image-preview');
                        if (imagePreview) {
                            imagePreview.src = '';
                            imagePreview.classList.remove('show');
                        }

                        const container = form.querySelector('#add-circle');
                        if (container)
                            container.classList.add('show');
                    });
                }
            });   
        });
    });
</script>